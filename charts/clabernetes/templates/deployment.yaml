---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.appName }}-manager
  namespace: {{ .Release.Namespace }}
  labels:
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    revision: "{{ .Release.Revision }}"
    app.kubernetes.io/name: "{{ .Values.appName }}-manager"
    clabernetes/app: {{ .Values.appName }}
    clabernetes/name: "{{ .Values.appName }}-manager"
    clabernetes/component: manager
    {{- $labels := merge .Values.globalLabels .Values.manager.deploymentLabels }}
      {{- if $labels }}
{{ toYaml $labels | indent 4 }}
      {{- end }}
  {{- $annotations := merge .Values.globalAnnotations .Values.manager.deploymentAnnotations }}
  {{- if $annotations }}
  annotations:
{{ toYaml $annotations | indent 4 }}
  {{- end }}
spec:
  selector:
    matchLabels:
      clabernetes/app: {{ .Values.appName }}
      release: {{ .Release.Name }}
      clabernetes/component: manager
  replicas: {{ .Values.manager.replicaCount }}
  strategy:
    rollingUpdate:
      maxSurge: 1
      {{- if (eq (int .Values.manager.replicaCount) 1) }}
      maxUnavailable: 0
      {{- else }}
      maxUnavailable: 1
      {{- end }}
    type: RollingUpdate
  template:
    metadata:
      labels:
        chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
        release: {{ .Release.Name }}
        heritage: {{ .Release.Service }}
        revision: "{{ .Release.Revision }}"
        app.kubernetes.io/name: "{{ .Values.appName }}-manager"
        clabernetes/app: {{ .Values.appName }}
        clabernetes/name: "{{ .Values.appName }}-manager"
        clabernetes/component: manager
        {{- $podLabels := merge .Values.globalLabels .Values.manager.podLabels }}
          {{- if $podLabels }}
{{ toYaml $podLabels | indent 8 }}
          {{- end }}
      {{- $podAnnotations := merge .Values.globalAnnotations .Values.manager.podAnnotations }}
      {{- if $podAnnotations }}
      annotations:
{{ toYaml $podAnnotations | indent 8 }}
      {{- end }}
    spec:
      {{- if .Values.manager.affinity }}
      affinity:
        {{ toYaml .Values.manager.affinity | indent 8 }}
      {{- else if (ge (int .Values.manager.replicaCount) 2) }}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    clabernetes/app: {{ .Values.appName }}
                    clabernetes/name: "{{ .Values.appName }}-manager"
                    clabernetes/component: manager
                topologyKey: kubernetes.io/hostname
            - weight: 50
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    clabernetes/app: {{ .Values.appName }}
                    clabernetes/name: "{{ .Values.appName }}-manager"
                    clabernetes/component: manager
                topologyKey: topology.kubernetes.io/zone
      {{- end }}
      terminationGracePeriodSeconds: 10
      serviceAccountName: "{{ .Values.appName }}-service-account"
      initContainers:
        - name: init
          {{- if .Values.manager.image }}
          image: {{ .Values.manager.image }}
          {{- else if eq .Chart.Version "0.0.0" }}
          image: "ghcr.io/srl-labs/clabernetes/clabernetes-manager:dev-latest"
          {{- else }}
          image: "ghcr.io/srl-labs/clabernetes/clabernetes-manager:{{ .Chart.Version }}"
          {{- end }}
          imagePullPolicy: {{ .Values.manager.imagePullPolicy }}
          command: ["/clabernetes/manager", "run", "--initializer"]
          env:
{{ include "managerContainerCommonEnv" . | indent 12 }}
          resources:
            requests:
              memory: {{ .Values.manager.resources.requests.memory }}
              cpu: {{ .Values.manager.resources.requests.cpu }}
            {{- if .Values.manager.resources.limits }}
            limits:
{{ toYaml .Values.manager.resources.limits | indent 14 }}
            {{- end }}
      containers:
        - name: manager
          {{- if .Values.manager.image }}
          image: {{ .Values.manager.image }}
          {{- else if eq .Chart.Version "0.0.0" }}
          image: "ghcr.io/srl-labs/clabernetes/clabernetes-manager:dev-latest"
          {{- else }}
          image: "ghcr.io/srl-labs/clabernetes/clabernetes-manager:{{ .Chart.Version }}"
          {{- end }}
          imagePullPolicy: {{ .Values.manager.imagePullPolicy }}
          command: ["/clabernetes/manager", "run"]
          env:
{{ include "managerContainerCommonEnv" . | indent 12 }}
          resources:
            requests:
              memory: {{ .Values.manager.resources.requests.memory }}
              cpu: {{ .Values.manager.resources.requests.cpu }}
            {{- if .Values.manager.resources.limits }}
            limits:
{{ toYaml .Values.manager.resources.limits | indent 14 }}
            {{- end }}
          ports:
          - name: http
            containerPort: 10443
          livenessProbe:
            httpGet:
              path: /alive
              port: 10443
              scheme: HTTPS
            successThreshold: 1
            failureThreshold: 2
            periodSeconds: 30
            timeoutSeconds: 5
      {{- $tolerations := merge $.Values.globalTolerations $.Values.manager.deploymentTolerations }}
      {{- if $tolerations }}
      tolerations:
{{ toYaml $tolerations | indent 4 }}
      {{- end }}


{{- if $.Values.ui.enabled }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $.Values.appName }}-ui
  namespace: {{ .Release.Namespace }}
  labels:
    chart: "{{ $.Chart.Name }}-{{ $.Chart.Version }}"
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    revision: "{{ .Release.Revision }}"
    app.kubernetes.io/name: "{{ $.Values.appName }}-ui"
    clabernetes/app: {{ $.Values.appName }}
    clabernetes/name: "{{ $.Values.appName }}-ui"
    clabernetes/component: ui
    {{- $labels := merge $.Values.globalLabels $.Values.ui.deploymentLabels }}
      {{- if $labels }}
{{ toYaml $labels | indent 4 }}
      {{- end }}
  {{- $annotations := merge $.Values.globalAnnotations $.Values.ui.deploymentAnnotations }}
  {{- if $annotations }}
  annotations:
{{ toYaml $annotations | indent 4 }}
  {{- end }}
spec:
  selector:
    matchLabels:
      clabernetes/app: {{ $.Values.appName }}
      release: {{ .Release.Name }}
      clabernetes/component: ui
  replicas: {{ $.Values.ui.replicaCount }}
  strategy:
    rollingUpdate:
      maxSurge: 1
      {{- if (eq (int $.Values.ui.replicaCount) 1) }}
      maxUnavailable: 0
      {{- else }}
      maxUnavailable: 1
      {{- end }}
    type: RollingUpdate
  template:
    metadata:
      labels:
        chart: "{{ $.Chart.Name }}-{{ $.Chart.Version }}"
        release: {{ .Release.Name }}
        heritage: {{ .Release.Service }}
        revision: "{{ .Release.Revision }}"
        app.kubernetes.io/name: "{{ $.Values.appName }}-ui"
        clabernetes/app: {{ $.Values.appName }}
        clabernetes/name: "{{ $.Values.appName }}-ui"
        clabernetes/component: ui
        {{- $podLabels := merge $.Values.globalLabels $.Values.ui.podLabels }}
          {{- if $podLabels }}
{{ toYaml $podLabels | indent 8 }}
          {{- end }}
      {{- $podAnnotations := merge $.Values.globalAnnotations $.Values.ui.podAnnotations }}
      {{- if $podAnnotations }}
      annotations:
{{ toYaml $podAnnotations | indent 8 }}
      {{- end }}
    spec:
      {{- if $.Values.ui.affinity }}
      affinity:
        {{ toYaml $.Values.ui.affinity | indent 8 }}
      {{- else if (ge (int $.Values.ui.replicaCount) 2) }}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    clabernetes/app: {{ $.Values.appName }}
                    clabernetes/name: "{{ $.Values.appName }}-ui"
                    clabernetes/component: ui
                topologyKey: kubernetes.io/hostname
            - weight: 50
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    clabernetes/app: {{ $.Values.appName }}
                    clabernetes/name: "{{ $.Values.appName }}-ui"
                    clabernetes/component: ui
                topologyKey: topology.kubernetes.io/zone
      {{- end }}
      terminationGracePeriodSeconds: 10
      serviceAccountName: "{{ $.Values.appName }}-service-account"
      containers:
        - name: ui
          {{- if .Values.ui.image }}
          image: {{ .Values.ui.image }}
          {{- else if eq .Chart.Version "0.0.0" }}
          image: "ghcr.io/srl-labs/clabernetes/clabernetes-ui:dev-latest"
          {{- else }}
          image: "ghcr.io/srl-labs/clabernetes/clabernetes-ui:{{ .Chart.Version }}"
          {{- end }}
          imagePullPolicy: {{ $.Values.ui.imagePullPolicy }}
          resources:
            requests:
              memory: {{ $.Values.ui.resources.requests.memory }}
              cpu: {{ $.Values.ui.resources.requests.cpu }}
            {{- if $.Values.ui.resources.limits }}
            limits:
              {{ toYaml $.Values.ui.resources.limits | indent 14 }}
            {{- end }}
          env:
            - name: HOSTNAME
              value: "0.0.0.0"
          ports:
            - name: http
              containerPort: 3000
          livenessProbe:
            httpGet:
              path: /alive
              port: http
              scheme: HTTP
            successThreshold: 1
            failureThreshold: 2
            periodSeconds: 30
            timeoutSeconds: 5
      {{- $tolerations := merge $.Values.globalTolerations $.Values.ui.deploymentTolerations }}
      {{- if $tolerations }}
      tolerations:
{{ toYaml $tolerations | indent 4 }}
      {{- end }}
{{- end }}